# ~/.tmux.conf
# Base: https://gist.github.com/721200

# -----------------------------------------------------------------------------
# Global settings
# -----------------------------------------------------------------------------

# Set prefix key to Ctrl-a
# unbind-key C-b
# set-option -g prefix C-a

# Setup some options with bells
set visual-bell off
set -g bell-action any # listen for activity on all windows

# send the prefix to client inside window
bind-key C-t send-prefix
bind-key t send-prefix

# open a man page in new window
bind-key / command-prompt "split-window 'exec man %%'"

# scrollback buffer n lines
set -g history-limit 99999

# start window indexing at zero (default)
set -g base-index 0

# instructs tmux to expect UTF-8 sequences
setw -g utf8 on

# tell tmux to use 256 colour terminal
set -g default-terminal "screen-256color"

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename off

# enable wm window titles
set -g set-titles off


# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# reload settings
bind-key R source-file ~/.tmux.conf

# detach client
bind-key d detach
bind-key C-d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-session
bind-key '"' choose-window

# display visible indicator of each pane
bind-key w display-panes

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# Cycle to next pane
#bind-key -r Tab select-pane -t :.+

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+


# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window
bind-key C-q confirm-before kill-pane

# copying and pasting
bind-key [ copy-mode
bind-key ] paste-buffer -s \015

# vi-style controls for copy mode
setw -g mode-keys vi

# enable mouse selection in copy mode
setw -g mode-mouse on

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer


# -----------------------------------------------------------------------------
# Vim/Tmux seemless navigation
# -----------------------------------------------------------------------------

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# -----------------------------------------------------------------------------
# Screen-like key bindings
# -----------------------------------------------------------------------------

# toggle last window like screen
bind-key C-t last-window

# new window
bind-key c new-window

# next
bind-key -r Space next-window

# prev
bind-key BSpace previous-window

# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"

# quit
bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
bind-key C-l refresh-client

## Split windows like vim

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 4
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

bind-key t send-keys -t right Up Enter
#bind-key t send-keys -t right rs Enter
bind-key y send-keys -t right rrs Enter

# -----------------------------------------------------------------------------
# Statusbar settings
# -----------------------------------------------------------------------------

# much of this is assuming use of tmuxline.vim plugin.

# toggle statusbar
bind-key s set status

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 1000

# -----------------------------------------------------------------------------
# vim: fen fdl=0 fdm=marker
